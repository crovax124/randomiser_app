name: Flutter Build
on:
  push:
    branches: [ master ]

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk
      - name: Upload Android APK
        uses: actions/upload-artifact@v2
        with:
          name: android-apk
          path: ./build/app/outputs/flutter-apk/app-release.apk
  build_ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      - name: Package .app as .ipa
        run: |
          mkdir Payload
          cp -r ./build/ios/iphoneos/Runner.app Payload/Runner.app
          zip -r build/ios/Runner.ipa Payload
      - name: Upload iOS IPA
        uses: actions/upload-artifact@v2
        with:
          name: ios-ipa
          path: ./build/ios/Runner.ipa

  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build macOS
        run: flutter build macos
      - name: Create .dmg file
        run: |
          hdiutil create -volname "Randomiser App" -srcfolder ./build/macos/Build/Products/Release/ -ov -format UDZO randomiser_app_macOS_${{ github.run_number }}.dmg
      - name: Upload macOS DMG
        uses: actions/upload-artifact@v2
        with:
          name: macos-dmg
          path: ./randomiser_app_macOS_${{ github.run_number }}.dmg
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows
      - name: Upload Windows EXE
        uses: actions/upload-artifact@v2
        with:
          name: windows-exe
          path: ./build/windows/x64/runner/Release/randomiser_app.exe

  create_release:
    needs: [build_android, build_ios, build_macos, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          tag_name: unified-${{ github.run_number }}
          release_name: Unified Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-apk/app-release.apk
          asset_name: randomiser_app_Android_${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
      - name: Upload iOS IPA
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ios-ipa/Runner.ipa
          asset_name: randomiser_app_iOS_${{ github.run_number }}.ipa
          asset_content_type: application/octet-stream

      - name: Upload macOS DMG
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-dmg/randomiser_app_macOS_${{ github.run_number }}.dmg
          asset_name: randomiser_app_macOS_${{ github.run_number }}.dmg
          asset_content_type: application/x-diskcopy

      - name: Upload Windows EXE
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-exe/randomiser_app.exe
          asset_name: randomiser_app_Windows_${{ github.run_number }}.exe
          asset_content_type: application/octet-stream

  publish_release:
    needs: [build_android, build_ios, build_macos, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v3
        with:
          repository: crovax124/randomiser
          token: ${{ secrets.MY_TOKEN }}
          path: public-repo

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Copy artifacts to public repository
        run: |
          cp android-apk/app-release.apk public-repo/android-${{ github.run_number }}.apk
          cp ios-ipa/Runner.ipa public-repo/ios-${{ github.run_number }}.ipa
          cp macos-dmg/randomiser_app_macOS_${{ github.run_number }}.dmg public-repo/macos-${{ github.run_number }}.dmg
          cp windows-exe/randomiser_app.exe public-repo/windows-${{ github.run_number }}.exe

      - name: Commit and push to public repository
        run: |
          cd public-repo
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add .
          git commit -m 'Release ${{ github.run_number }}'
          git push

      - name: Create Release in Public Repository
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}
          release_name: Unified Release ${{ github.run_number }}
          draft: false
          prerelease: false
          body: 'Release of Android, iOS, macOS, and Windows builds for version ${{ github.run_number }}'