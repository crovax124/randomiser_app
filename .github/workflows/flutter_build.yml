name: Flutter Build
on:
  push:
    branches: [ master ]

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk
      - name: Create Release for Android
        id: create_release_android
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: android-${{ github.run_number }}
          release_name: Android Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_android.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: randomiser_app_Android_${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
  build_ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      - name: Create Release for iOS
        id: create_release_ios
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ios-${{ github.run_number }}
          release_name: iOS Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload iOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ios.outputs.upload_url }}
          asset_path: ./build/ios/iphoneos/Runner.app
          asset_name: randomiser_app_iOS_${{ github.run_number }}.ipa
          asset_content_type: application/octet-stream
  build_macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get
      - name: Build macOS
        run: flutter build macos
      - name: Create Release for macOS
        id: create_release_macos
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: macos-${{ github.run_number }}
          release_name: macOS Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload macOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_macos.outputs.upload_url }}
          asset_path: ./build/macos/Build/Products/Release/randomiser_app.app
          asset_name: randomiser_app_macOS_${{ github.run_number }}.app
          asset_content_type: application/octet-stream
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.16.5'
      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows

      - name: Create Release for Windows
        id: create_release_windows
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: windows-${{ github.run_number }}
          release_name: Windows Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: ./build/windows/runner/Release/randomiser_app.exe
          asset_name: randomiser_app_Windows_${{ github.run_number }}.exe
          asset_content_type: application/octet-stream